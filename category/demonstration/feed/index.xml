<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	>

<channel>
	<title>Demonstration &#8211; Specmatic</title>
	<atom:link href="https://specmatic.io/category/demonstration/feed/" rel="self" type="application/rss+xml" />
	<link>https://specmatic.io/</link>
	<description>Contract Driven Development</description>
	<lastBuildDate>Thu, 25 Jul 2024 00:48:28 +0000</lastBuildDate>
	<language>en-US</language>
	<sy:updatePeriod>
	hourly	</sy:updatePeriod>
	<sy:updateFrequency>
	1	</sy:updateFrequency>
	<generator>https://wordpress.org/?v=6.6.1</generator>

<image>
	<url>https://specmatic.io/wp-content/uploads/2022/09/Favicon.png</url>
	<title>Demonstration &#8211; Specmatic</title>
	<link>https://specmatic.io/</link>
	<width>32</width>
	<height>32</height>
</image> 
	<item>
		<title>API Resiliency and Contract Testing for GraphQL</title>
		<link>https://specmatic.io/updates/api-resiliency-and-contract-testing-for-graphql/</link>
		
		<dc:creator><![CDATA[John]]></dc:creator>
		<pubDate>Wed, 24 Jul 2024 20:10:00 +0000</pubDate>
				<category><![CDATA[Demonstration]]></category>
		<category><![CDATA[Feature Spotlight]]></category>
		<category><![CDATA[Updates]]></category>
		<guid isPermaLink="false">https://specmatic.io/?p=5198</guid>

					<description><![CDATA[Transform your GraphQL API specs into executable contracts in seconds Now you can easily leverage your GraphQL APIs for contract testing, intelligent service virtualisation and backward compatibility testing, just like you would for your OpenAPI-based services. No more complex and brittle setups that involve an assortment of tools &#8211; Specmatic handles it all for you, [&#8230;]]]></description>
		
		
		
			</item>
		<item>
		<title>Contract Testing Google Pub/Sub: Using AsyncAPI specs as Executable Contracts</title>
		<link>https://specmatic.io/updates/contract-testing-google-pub-sub-using-asyncapi-as-executable-contracts/</link>
		
		<dc:creator><![CDATA[Yogesh Nikam]]></dc:creator>
		<pubDate>Wed, 17 Apr 2024 05:13:57 +0000</pubDate>
				<category><![CDATA[Demonstration]]></category>
		<category><![CDATA[Feature Spotlight]]></category>
		<category><![CDATA[Updates]]></category>
		<category><![CDATA[AsyncAPI]]></category>
		<category><![CDATA[Contract Driven Development]]></category>
		<category><![CDATA[Contract Testing]]></category>
		<guid isPermaLink="false">https://specmatic.io/?p=4576</guid>

					<description><![CDATA[Shift-Left the identification of integration issues in applications built with Event Driven Architecture (EDA) by leveraging AsyncAPI specs as Executable Contracts Introduction The surge in popularity of microservices has revolutionized the way we think about software architecture. However, as systems grow and inter-service communication increases, the risk of integration issues can also rise. One such [&#8230;]]]></description>
		
		
		
			</item>
		<item>
		<title>Contract vs. Approval Testing: Identifying Bugs in RESTfulBooker&#8217;s API with Specmatic and TextTest</title>
		<link>https://specmatic.io/comparisons/contract-vs-approval-testing-identifying-bugs-in-restfulbookers-api-with-texttest-and-specmatic/</link>
		
		<dc:creator><![CDATA[John]]></dc:creator>
		<pubDate>Wed, 13 Mar 2024 04:17:32 +0000</pubDate>
				<category><![CDATA[Comparisons]]></category>
		<category><![CDATA[Demonstration]]></category>
		<category><![CDATA[In the Media]]></category>
		<category><![CDATA[Updates]]></category>
		<guid isPermaLink="false">https://specmatic.io/?p=4470</guid>

					<description><![CDATA[Testing APIs: Specmatic vs TextTest Emily Bache wanted to compare TextTest with Specmatic and has published a video about her experience: The BEST way to find BUGS in an API &#124; Contract vs Approval Testing She observes, â€œSpecmatic works best when the spec is defined independently in an ongoing discussion about expectations between the service [&#8230;]]]></description>
		
		
		
			</item>
	</channel>
</rss>
